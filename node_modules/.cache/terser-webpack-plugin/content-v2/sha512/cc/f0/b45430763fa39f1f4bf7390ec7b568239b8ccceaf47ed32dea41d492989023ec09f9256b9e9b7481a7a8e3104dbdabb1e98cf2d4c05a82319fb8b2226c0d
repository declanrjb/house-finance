{"code":"(this[\"webpackJsonpnew-flare\"]=this[\"webpackJsonpnew-flare\"]||[]).push([[0],{18:function(e,t,n){\"use strict\";n.r(t);var o=n(4),i=n(15),d=n.n(i),r=n(16),a=n.n(r),s=n(17);fetch(\"./house17.gexf\").then((function(e){return e.text()})).then((function(e){var t=Object(s.parse)(a.a,e),n=document.getElementById(\"sigma-container\"),i=document.getElementById(\"zoom-in\"),r=document.getElementById(\"zoom-out\"),u=document.getElementById(\"zoom-reset\"),c=(document.getElementById(\"labels-threshold\"),document.getElementById(\"search-input\")),l=document.getElementById(\"suggestions\"),g=new d.a(t,n,{minCameraRatio:.01,maxCameraRatio:3,allowInvalidContainer:!0,renderEdgeLabels:!0}),h=g.getCamera();i.addEventListener(\"click\",(function(){h.animatedZoom({duration:600})})),r.addEventListener(\"click\",(function(){h.animatedUnzoom({duration:600})})),u.addEventListener(\"click\",(function(){h.animatedReset({duration:600})}));var v={searchQuery:\"\"};function f(e){if(v.searchQuery=e,c.value!==e&&(c.value=e),e){var n=e.toLowerCase(),o=t.nodes().map((function(e){return{id:e,label:t.getNodeAttribute(e,\"label\")}})).filter((function(e){return e.label.toLowerCase().includes(n)}));if(1===o.length&&o[0].label===e){v.selectedNode=o[0].id,m(o[0].id),v.suggestions=void 0,N=!0,b=o[0].id;var i=g.getNodeDisplayData(v.selectedNode);g.getCamera().animate(i,{duration:500})}else v.selectedNode=void 0,v.suggestions=new Set(o.map((function(e){return e.id})))}else v.selectedNode=void 0,v.suggestions=void 0;g.refresh()}function m(e){e?(v.hoveredNode=e,v.hoveredNeighbors=new Set(t.neighbors(e))):(v.hoveredNode=void 0,v.hoveredNeighbors=void 0),g.refresh()}l.innerHTML=t.nodes().map((function(e){return'<option value=\"'.concat(t.getNodeAttribute(e,\"label\"),'\"></option>')})).join(\"\\n\"),c.addEventListener(\"input\",(function(){f(c.value||\"\")})),c.addEventListener(\"blur\",(function(){f(\"\")}));var b=void 0,N=!1;g.on(\"clickNode\",(function(e){var t=e.node;b===t?(b=void 0,m(void 0),N=!1):(b=t,N=!0,m(t))})),g.on(\"enterNode\",(function(e){var t=e.node;!1===N&&m(t)})),g.on(\"leaveNode\",(function(e){var t=e.node;!1===N&&b!==t&&m(void 0)})),g.on(\"doubleClickNode\",(function(e){var t=e.node;window.open(\"https://www.opensecrets.org/search?q=\"+t)})),g.setSetting(\"nodeReducer\",(function(e,n){var i=Object(o.a)({},n);return v.hoveredNeighbors&&!v.hoveredNeighbors.has(e)&&v.hoveredNode!==e&&(i.label=\"\",i.color=\"#f6f6f6\"),v.selectedNode===e?i.highlighted=!0:v.suggestions&&!v.suggestions.has(e)&&(i.label=\"\",i.color=\"#f6f6f6\"),v.suggestions&&v.suggestions.has(e)&&(i.highlighted=!0,i.label=t.getNodeAttribute(e,\"label\"),i.color=t.getNodeAttribute(e,\"color\")),i})),g.setSetting(\"edgeReducer\",(function(e,n){var i=Object(o.a)({},n);return v.hoveredNode&&!t.hasExtremity(e,v.hoveredNode)&&(i.hidden=!0),!v.suggestions||v.suggestions.has(t.source(e))&&v.suggestions.has(t.target(e))||(i.hidden=!0),i}))}))}},[[18,1,2]]]);","name":"static/js/main.a30d9649.chunk.js","map":{"version":3,"names":["this","push","module","__webpack_exports__","__webpack_require__","r","_Users_declanbradley_Documents_GitHub_house_finance_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_0__","sigma__WEBPACK_IMPORTED_MODULE_1__","sigma__WEBPACK_IMPORTED_MODULE_1___default","n","graphology__WEBPACK_IMPORTED_MODULE_2__","graphology__WEBPACK_IMPORTED_MODULE_2___default","graphology_gexf_browser__WEBPACK_IMPORTED_MODULE_3__","fetch","then","res","text","gexf","graph","Object","a","container","document","getElementById","zoomInBtn","zoomOutBtn","zoomResetBtn","searchInput","searchSuggestions","renderer","minCameraRatio","maxCameraRatio","allowInvalidContainer","renderEdgeLabels","camera","getCamera","addEventListener","animatedZoom","duration","animatedUnzoom","animatedReset","state","searchQuery","setSearchQuery","query","value","lcQuery","toLowerCase","suggestions","nodes","map","id","label","getNodeAttribute","filter","_ref","includes","length","selectedNode","setHoveredNode","undefined","clickMode","clickedNode","nodePosition","getNodeDisplayData","animate","Set","_ref2","refresh","node","hoveredNode","hoveredNeighbors","neighbors","innerHTML","concat","join","on","_ref3","_ref4","_ref5","_ref6","window","open","setSetting","data","has","color","highlighted","edge","hasExtremity","hidden","source","target"],"sources":["static/js/main.a30d9649.chunk.js"],"mappings":"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"},"input":"(this[\"webpackJsonpnew-flare\"] = this[\"webpackJsonpnew-flare\"] || []).push([[0],{\n\n/***/ 18:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Users_declanbradley_Documents_GitHub_house_finance_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);\n/* harmony import */ var sigma__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(15);\n/* harmony import */ var sigma__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(sigma__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var graphology__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(16);\n/* harmony import */ var graphology__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(graphology__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var graphology_gexf_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(17);\n/* harmony import */ var graphology_gexf_browser__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(graphology_gexf_browser__WEBPACK_IMPORTED_MODULE_3__);\n/**\n * This example shows how to load a GEXF graph file (using the dedicated\n * graphology parser), and display it with some basic map features: Zoom in and\n * out buttons, reset zoom button, and a slider to increase or decrease the\n * quantity of labels displayed on screen.\n */// Load external GEXF file:\nfetch(\"./house17.gexf\").then(function(res){return res.text();}).then(function(gexf){// Parse GEXF string:\nvar graph=Object(graphology_gexf_browser__WEBPACK_IMPORTED_MODULE_3__[\"parse\"])(graphology__WEBPACK_IMPORTED_MODULE_2___default.a,gexf);// Retrieve some useful DOM elements:\nvar container=document.getElementById(\"sigma-container\");var zoomInBtn=document.getElementById(\"zoom-in\");var zoomOutBtn=document.getElementById(\"zoom-out\");var zoomResetBtn=document.getElementById(\"zoom-reset\");var labelsThresholdRange=document.getElementById(\"labels-threshold\");var searchInput=document.getElementById(\"search-input\");var searchSuggestions=document.getElementById(\"suggestions\");// Instanciate sigma:\nvar renderer=new sigma__WEBPACK_IMPORTED_MODULE_1___default.a(graph,container,{minCameraRatio:0.01,maxCameraRatio:3,allowInvalidContainer:true,renderEdgeLabels:true});var camera=renderer.getCamera();// Bind zoom manipulation buttons\nzoomInBtn.addEventListener(\"click\",function(){camera.animatedZoom({duration:600});});zoomOutBtn.addEventListener(\"click\",function(){camera.animatedUnzoom({duration:600});});zoomResetBtn.addEventListener(\"click\",function(){camera.animatedReset({duration:600});});// Type and declare internal state:\nvar state={searchQuery:\"\"};// Feed the datalist autocomplete values:\nsearchSuggestions.innerHTML=graph.nodes().map(function(node){return\"<option value=\\\"\".concat(graph.getNodeAttribute(node,\"label\"),\"\\\"></option>\");}).join(\"\\n\");// Actions:\nfunction setSearchQuery(query){state.searchQuery=query;if(searchInput.value!==query)searchInput.value=query;if(query){var lcQuery=query.toLowerCase();var suggestions=graph.nodes().map(function(n){return{id:n,label:graph.getNodeAttribute(n,\"label\")};}).filter(function(_ref){var label=_ref.label;return label.toLowerCase().includes(lcQuery);});// If we have a single perfect match, them we remove the suggestions, and\n// we consider the user has selected a node through the datalist\n// autocomplete:\nif(suggestions.length===1&&suggestions[0].label===query){state.selectedNode=suggestions[0].id;setHoveredNode(suggestions[0].id);state.suggestions=undefined;clickMode=true;clickedNode=suggestions[0].id;// Move the camera to center it on the selected node:\nvar nodePosition=renderer.getNodeDisplayData(state.selectedNode);renderer.getCamera().animate(nodePosition,{duration:500});}// Else, we display the suggestions list:\nelse{state.selectedNode=undefined;state.suggestions=new Set(suggestions.map(function(_ref2){var id=_ref2.id;return id;}));}}// If the query is empty, then we reset the selectedNode / suggestions state:\nelse{state.selectedNode=undefined;state.suggestions=undefined;}// Refresh rendering:\nrenderer.refresh();}function setHoveredNode(node){if(node){state.hoveredNode=node;state.hoveredNeighbors=new Set(graph.neighbors(node));}else{state.hoveredNode=undefined;state.hoveredNeighbors=undefined;}// Refresh rendering:\nrenderer.refresh();}// Bind search input interactions:\nsearchInput.addEventListener(\"input\",function(){setSearchQuery(searchInput.value||\"\");});searchInput.addEventListener(\"blur\",function(){setSearchQuery(\"\");});var clickedNode=undefined;var clickMode=false;// Bind graph interactions:\nrenderer.on(\"clickNode\",function(_ref3){var node=_ref3.node;if(clickedNode===node){clickedNode=undefined;setHoveredNode(undefined);clickMode=false;}else{clickedNode=node;clickMode=true;setHoveredNode(node);}});renderer.on(\"enterNode\",function(_ref4){var node=_ref4.node;if(clickMode===false){setHoveredNode(node);}});renderer.on(\"leaveNode\",function(_ref5){var node=_ref5.node;if(clickMode===false){if(clickedNode!==node){setHoveredNode(undefined);}}});renderer.on(\"doubleClickNode\",function(_ref6){var node=_ref6.node;window.open(\"https://www.opensecrets.org/search?q=\"+node);});renderer.setSetting(\"nodeReducer\",function(node,data){var res=Object(_Users_declanbradley_Documents_GitHub_house_finance_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({},data);if(state.hoveredNeighbors&&!state.hoveredNeighbors.has(node)&&state.hoveredNode!==node){res.label=\"\";res.color=\"#f6f6f6\";}if(state.selectedNode===node){res.highlighted=true;}else if(state.suggestions&&!state.suggestions.has(node)){res.label=\"\";res.color=\"#f6f6f6\";}if(state.suggestions&&state.suggestions.has(node)){res.highlighted=true;res.label=graph.getNodeAttribute(node,\"label\");res.color=graph.getNodeAttribute(node,\"color\");}return res;});// Render edges accordingly to the internal state:\n// 1. If a node is hovered, the edge is hidden if it is not connected to the\n//    node\n// 2. If there is a query, the edge is only visible if it connects two\n//    suggestions\nrenderer.setSetting(\"edgeReducer\",function(edge,data){var res=Object(_Users_declanbradley_Documents_GitHub_house_finance_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({},data);if(state.hoveredNode&&!graph.hasExtremity(edge,state.hoveredNode)){res.hidden=true;}if(state.suggestions&&(!state.suggestions.has(graph.source(edge))||!state.suggestions.has(graph.target(edge)))){res.hidden=true;}return res;});});\n\n/***/ })\n\n},[[18,1,2]]]);","inputSourceMap":{"version":3,"sources":["/Users/declanbradley/Documents/GitHub/house-finance/src/index.ts"],"names":["fetch","then","res","text","gexf","graph","parse","Graph","container","document","getElementById","zoomInBtn","zoomOutBtn","zoomResetBtn","labelsThresholdRange","searchInput","searchSuggestions","renderer","Sigma","minCameraRatio","maxCameraRatio","allowInvalidContainer","renderEdgeLabels","camera","getCamera","addEventListener","animatedZoom","duration","animatedUnzoom","animatedReset","state","searchQuery","innerHTML","nodes","map","node","getNodeAttribute","join","setSearchQuery","query","value","lcQuery","toLowerCase","suggestions","n","id","label","filter","includes","length","selectedNode","setHoveredNode","undefined","clickMode","clickedNode","nodePosition","getNodeDisplayData","animate","Set","refresh","hoveredNode","hoveredNeighbors","neighbors","on","window","open","setSetting","data","has","color","highlighted","edge","hasExtremity","hidden","source","target"],"mappings":"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","file":"x","sourcesContent":["/**\n * This example shows how to load a GEXF graph file (using the dedicated\n * graphology parser), and display it with some basic map features: Zoom in and\n * out buttons, reset zoom button, and a slider to increase or decrease the\n * quantity of labels displayed on screen.\n */\n\nimport Sigma from \"sigma\";\nimport Graph from \"graphology\";\nimport { parse } from \"graphology-gexf/browser\";\nimport { Coordinates, EdgeDisplayData, NodeDisplayData } from \"sigma/types\";\n\n// Load external GEXF file:\nfetch(\"./house17.gexf\")\n  .then((res) => res.text())\n  .then((gexf) => {\n    // Parse GEXF string:\n    const graph = parse(Graph, gexf);\n\n    // Retrieve some useful DOM elements:\n    const container = document.getElementById(\"sigma-container\") as HTMLElement;\n    const zoomInBtn = document.getElementById(\"zoom-in\") as HTMLButtonElement;\n    const zoomOutBtn = document.getElementById(\"zoom-out\") as HTMLButtonElement;\n    const zoomResetBtn = document.getElementById(\n      \"zoom-reset\"\n    ) as HTMLButtonElement;\n    const labelsThresholdRange = document.getElementById(\n      \"labels-threshold\"\n    ) as HTMLInputElement;\n    const searchInput = document.getElementById(\n      \"search-input\"\n    ) as HTMLInputElement;\n    const searchSuggestions = document.getElementById(\n      \"suggestions\"\n    ) as HTMLDataListElement;\n\n    // Instanciate sigma:\n    const renderer = new Sigma(graph, container, {\n      minCameraRatio: 0.01,\n      maxCameraRatio: 3,\n      allowInvalidContainer: true,\n      renderEdgeLabels: true\n    });\n    const camera = renderer.getCamera();\n\n    // Bind zoom manipulation buttons\n    zoomInBtn.addEventListener(\"click\", () => {\n      camera.animatedZoom({ duration: 600 });\n    });\n    zoomOutBtn.addEventListener(\"click\", () => {\n      camera.animatedUnzoom({ duration: 600 });\n    });\n    zoomResetBtn.addEventListener(\"click\", () => {\n      camera.animatedReset({ duration: 600 });\n    });\n\n    // Type and declare internal state:\n    interface State {\n      hoveredNode?: string;\n      searchQuery: string;\n\n      // State derived from query:\n      selectedNode?: string;\n      suggestions?: Set<string>;\n\n      // State derived from hovered node:\n      hoveredNeighbors?: Set<string>;\n    }\n    const state: State = { searchQuery: \"\" };\n\n    // Feed the datalist autocomplete values:\n    searchSuggestions.innerHTML = graph\n      .nodes()\n      .map(\n        (node) =>\n          `<option value=\"${graph.getNodeAttribute(node, \"label\")}\"></option>`\n      )\n      .join(\"\\n\");\n\n    // Actions:\n    function setSearchQuery(query: string) {\n      state.searchQuery = query;\n\n      if (searchInput.value !== query) searchInput.value = query;\n\n      if (query) {\n        const lcQuery = query.toLowerCase();\n        const suggestions = graph\n          .nodes()\n          .map((n) => ({\n            id: n,\n            label: graph.getNodeAttribute(n, \"label\") as string\n          }))\n          .filter(({ label }) => label.toLowerCase().includes(lcQuery));\n\n        // If we have a single perfect match, them we remove the suggestions, and\n        // we consider the user has selected a node through the datalist\n        // autocomplete:\n        if (suggestions.length === 1 && suggestions[0].label === query) {\n          state.selectedNode = suggestions[0].id;\n          setHoveredNode(suggestions[0].id)\n          state.suggestions = undefined;\n          clickMode = true\n          clickedNode = suggestions[0].id\n\n          // Move the camera to center it on the selected node:\n          const nodePosition = renderer.getNodeDisplayData(\n            state.selectedNode\n          ) as Coordinates;\n          renderer.getCamera().animate(nodePosition, {\n            duration: 500\n          });\n        }\n        // Else, we display the suggestions list:\n        else {\n          state.selectedNode = undefined;\n          state.suggestions = new Set(suggestions.map(({ id }) => id));\n        }\n      }\n      // If the query is empty, then we reset the selectedNode / suggestions state:\n      else {\n        state.selectedNode = undefined;\n        state.suggestions = undefined;\n      }\n\n      // Refresh rendering:\n      renderer.refresh();\n    }\n\n    function setHoveredNode(node?: string) {\n      if (node) {\n        state.hoveredNode = node;\n        state.hoveredNeighbors = new Set(graph.neighbors(node));\n      } else {\n        state.hoveredNode = undefined;\n        state.hoveredNeighbors = undefined;\n      }\n\n      // Refresh rendering:\n      renderer.refresh();\n    }\n\n    // Bind search input interactions:\n    searchInput.addEventListener(\"input\", () => {\n      setSearchQuery(searchInput.value || \"\");\n    });\n    searchInput.addEventListener(\"blur\", () => {\n      setSearchQuery(\"\");\n    });\n\n    var clickedNode = undefined;\n    var clickMode = false;\n    // Bind graph interactions:\n    renderer.on(\"clickNode\", ({ node }) => {\n      if (clickedNode === node) {\n        clickedNode = undefined;\n        setHoveredNode(undefined);\n        clickMode = false;\n      } else {\n        clickedNode = node;\n        clickMode = true;\n        setHoveredNode(node);\n      }\n    });\n    renderer.on(\"enterNode\", ({ node }) => {\n      if (clickMode === false) {\n        setHoveredNode(node);\n      }\n    });\n    renderer.on(\"leaveNode\", ({ node }) => {\n      if (clickMode === false) {\n        if (clickedNode !== node) {\n          setHoveredNode(undefined);\n        }\n      }\n    });\n    renderer.on(\"doubleClickNode\", ({ node }) => {\n      window.open(\"https://www.opensecrets.org/search?q=\" + node);\n    });\n\n    renderer.setSetting(\"nodeReducer\", (node, data) => {\n      const res: Partial<NodeDisplayData> = { ...data };\n\n      if (\n        state.hoveredNeighbors &&\n        !state.hoveredNeighbors.has(node) &&\n        state.hoveredNode !== node\n      ) {\n        res.label = \"\";\n        res.color = \"#f6f6f6\";\n      }\n\n      if (state.selectedNode === node) {\n        res.highlighted = true;\n      } else if (state.suggestions && !state.suggestions.has(node)) {\n        res.label = \"\";\n        res.color = \"#f6f6f6\";\n      }\n\n      if (state.suggestions && state.suggestions.has(node)) {\n        res.highlighted = true;\n        res.label = graph.getNodeAttribute(node, \"label\")\n        res.color = graph.getNodeAttribute(node, \"color\")\n      }\n\n      return res;\n    });\n\n    // Render edges accordingly to the internal state:\n    // 1. If a node is hovered, the edge is hidden if it is not connected to the\n    //    node\n    // 2. If there is a query, the edge is only visible if it connects two\n    //    suggestions\n    renderer.setSetting(\"edgeReducer\", (edge, data) => {\n      const res: Partial<EdgeDisplayData> = { ...data };\n\n      if (state.hoveredNode && !graph.hasExtremity(edge, state.hoveredNode)) {\n        res.hidden = true;\n      }\n\n      if (\n        state.suggestions &&\n        (!state.suggestions.has(graph.source(edge)) ||\n          !state.suggestions.has(graph.target(edge)))\n      ) {\n        res.hidden = true;\n      }\n\n      return res;\n    });\n  });\n"]}}